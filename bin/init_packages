#!/bin/bash

function package_exists () {
    if [[ $(cat /etc/*-release) =~ Ubuntu ]]; then
        dpkg -l "$*"
    elif [[ $(cat /etc/*-release) =~ CentOS ]]; then
        rpm -q --quiet "$*"
    fi
}

function init_pg () {
    # 导入 pg 源
    sudo dnf install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
    # 关闭 centos 内置的 pg 模块
    sudo dnf -qy module disable postgresql
    # 安装 pg
    sudo dnf install -y postgresql14-devel
    # 初始化数据库
    sudo /usr/pgsql-14/bin/postgresql-14-setup initdb

    sudo systemctl enable postgresql-14
    sudo systemctl start postgresql-14

    sudo -u postgres psql -p 5432 -c "ALTER USER postgres WITH PASSWORD '$POSTGRES_PASSWORD';"

    # For install sequel_pg succesful, we have to add pg_config into $PATH
    sed -i '1iPATH=/usr/pgsql-14/bin:$PATH'

}

if [[ $(cat /etc/*-release) =~ Ubuntu ]]; then
    if ! package_exists nodejs; then
        curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -
        sudo apt-get install -y nodejs
    fi

    if ! package_exists nginx; then
        ## Replace focal with your corresponding Ubuntu release.
        cat <<'HEREDOC' > /etc/apt/sources.list.d/nginx.list
deb https://nginx.org/packages/ubuntu/ focal nginx
deb-src https://nginx.org/packages/ubuntu/ focal nginx
HEREDOC
        sudo apt update
        sudo apt install nginx
        systemctl enable nginx
    fi

    if ! package_exists python-certbot-nginx; then
        add-apt-repository ppa:certbot/certbot
        apt update
        apt install python-certbot-nginx
        # 1. Run `sudo certbot --nginx' to configure current domain.
        # 2. Test if can renew certbot successful. `sudo certbot renew --dry-run'
        # 3. Add following crontab, will date cert first day of month.
        #    0 0 1 * * /usr/bin/certbot renew
        # more detail, check https://certbot.eff.org/
    fi

elif [[ $(cat /etc/*-release) =~ CentOS ]]; then
    if ! package_exists nodejs; then
        curl -fsSL https://rpm.nodesource.com/setup_16.x | sudo bash -
        sudo yum install -y nodejs
    fi

    if ! rpm -q --quiet python3-certbot-nginx; then
        yum install -y certbot python3-certbot-nginx
        # 1. Run `sudo certbot --nginx' to configure current domain.
        # 2. Test if can renew certbot successful. `sudo certbot renew --dry-run'
        # 3. Add following crontab, will date cert first day of month.
        #    0 0 1 * * /usr/bin/certbot renew
        # more detail, check https://certbot.eff.org/
    fi

    if ! package_exists nginx; then
        wget https://nginx.org/packages/centos/8/x86_64/RPMS/nginx-1.20.1-1.el8.ngx.x86_64.rpm
        sudo rpm -ivh nginx-1.20.1-1.el8.ngx.x86_64.rpm
        systemctl enable nginx
    fi

    # for install newest version nginx
    if ! package_exists nginx; then
        cat <<'HEREDOC' > /etc/yum.repos.d/nginx.repo
    [nginx-stable]
    name=nginx stable repo
    baseurl=http://nginx.org/packages/centos/$releasever/$basearch/
    gpgcheck=1
    enabled=1
    gpgkey=https://nginx.org/keys/nginx_signing.key
    module_hotfixes=true

    [nginx-mainline]
    name=nginx mainline repo
    baseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/
    gpgcheck=1
    enabled=0
    gpgkey=https://nginx.org/keys/nginx_signing.key
    module_hotfixes=true
HEREDOC
        sudo yum-config-manager --enable nginx-stable
        sudo yum install -y nginx

        # compile bri dynamic module support
        nginx_version=$(nginx -v 2>&1 |cut -d'/' -f2)
        wget https://nginx.org/download/nginx-${nginx_version}.tar.gz
        tar xvf nginx-${nginx_version}.tar.gz
        cd nginx-${nginx_version}
        git clone https://github.com/google/ngx_brotli.git
        cd ngx_brotli && git submodule update --init && cd -
        # yum install -y pcre pcre-devel zlib zlib-devel openssl openssl-devel
        ./configure --with-compat --add-dynamic-module=./ngx_brotli
        make modules
        sudo cp objs/*.so /etc/nginx/modules/

        # Then, add following config into /etc/nginx/nginx.conf to load module.

        # load_module modules/ngx_http_brotli_filter_module.so;
        # load_module modules/ngx_http_brotli_static_module.so;
    fi

    if ! which -a pg_dump &>/dev/null; then
        init_pg
    fi
else
    echo "Don't support this linux release!"
fi
